#include <iostream>
#include <fstream>
#include <string>

int main() {
    const std::string cifra8Bits
    const std::string cifra3bits = "011001100010101110111";

    std::string caminhoArquivoEntrada = "";
    std::cout << "\nDigite o caminho do arquivo de entrada: ";
    std::cin >> caminhoArquivoEntrada;
    std::cin.ignore();

    std::ifstream arquivoEntrada(caminhoArquivoEntrada);
    if(arquivoEntrada.fail()) {
        std::cout << "\nNao foi possivel abrir o arquivo de entrada.";
        return -1;
    }

    std::string caminhoArquivoSaida = "";
    std::cout << "\nDigite o caminho do arquivo de saida: ";
    std::cin >> caminhoArquivoSaida;
    std::cin.ignore();

    std::ofstream arquivoSaida(caminhoArquivoSaida);
    if(arquivoSaida.fail()) {
        std::cout << "\nNao foi possivel criar o arquivo de saida.";
        return -1;
    }

    arquivoSaida << "P2\n";
    arquivoSaida << "881 673\n";
    arquivoSaida << "255\n";

    unsigned int escolha = 0;
    std::cout << "\n[1] para 8 bits\n[2] para 3 bits\n";
    std::cout << "\nDigite a cifra que deseja utilizar (8 ou 3 bits): ";
    std::cin >> escolha;
    std::cin.ignore();

    std::string cifra = (escolha == 1) ? cifra8Bits : cifra3bits;

    bool bit = 0;
    bool itemAtualCifra = 0;
    unsigned int indexCifra = 0;

    unsigned int contadorCaracteresLinha = 0;
    unsigned int quantidadeMaximaCaracteresPorLinha = 64;

    while(arquivoEntrada >> bit) {
        if(indexCifra == cifra.size()) {
            indexCifra = 0;
        }

        itemAtualCifra = (cifra[indexCifra] == '1') ? 1 : 0;
        indexCifra++;
        
        bool bitCifrado = bit ^ itemAtualCifra;
        if(bitCifrado == 0) {
            arquivoSaida << " 0";
        }
        else {
            arquivoSaida << " 255";
        }

        contadorCaracteresLinha += 4;
        if(contadorCaracteresLinha >= quantidadeMaximaCaracteresPorLinha) {
            arquivoSaida << "\n";
            contadorCaracteresLinha = 0;
        }
    }

    arquivoEntrada.close();
    arquivoSaida.close();

    return 0;
}